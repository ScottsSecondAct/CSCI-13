/*
 * This source file was generated by the Gradle 'init' task
 */
package weatherapiapp;

import weatherapiapp.GridPoint.GridPoint;
import weatherapiapp.Location.Location;
import weatherapiapp.WeatherForecast.WeatherForecast;
import weatherapiapp.WeatherForecast.WeatherForecastApiClient;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;

public class App {
    private static final Logger LOGGER = Logger.getLogger(WeatherForecastApiClient.class.getName());
    public static void main(String[] args) {
        //String addressString = "5100 Sierra College Blvd, Rocklin, CA 95677";
        String addressString = "13254 Peardale Road, Grass Valley, CA 95945";

        // Get the location of the address in Latitude and Longitude
        Optional<Location> location;
        location = Location.getLocation(addressString);

        // Get the grid point of the location
        Optional<GridPoint> gridPoint = Optional.empty();
        if (location.isPresent())
        {
            gridPoint = GridPoint.getGridPoint(location.get());
        } else {
            LOGGER.log(Level.WARNING, "Location not available for the address.");
            System.exit(0);
        }

        // Get the weather forecast of the grid point
        Optional<WeatherForecast> weatherForecast = Optional.empty();
        if (gridPoint.isPresent()) {
            weatherForecast = WeatherForecast.getWeatherForecast(gridPoint.get());
        } else {
            LOGGER.log(Level.WARNING, "Weather forecast not available for the location.");
            System.exit(0);
        }

        if (weatherForecast.isPresent()) {
            (weatherForecast.get()).printWeatherForecastForWeek();
        } else {
            LOGGER.log(Level.WARNING, "Weather forecast not available for the location.");
            System.exit(0);
        }
    }
}